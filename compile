#!/bin/bash
# This script is implemented using Bash
# You are free to change the language used for this script,
# but do *not* change its name.

helpFunction()
{
   echo ""
   echo "Usage: $0 [options] <target.wacc>"
   echo -e "\tDefault config: ./compile <target.wacc> is equal to ./compile -s <target.wacc>"
   echo -e "\toptions:"
   echo -e "\t\t-p: --parse_only. Check only for syntax errors and generate an AST."
   echo -e "\t\t-s: --semantic_check. Parse the input file for both syntax and semantics error."
   echo -e "\t\t-t: --print_ast. Display AST generated by the parser."
   echo -e "\t\t-o: --optimize. Optimize the code using given level. (Currently unavailable)"
   echo -e "\t\t-a: --print asm. Display ARM assembly code. (Currently unavailable)"
   echo -e "\t\t-x: --execute. Assemble and Execute the given wacc file. (Currently unavailable)"
   echo -e "\t\t-h: --help. Show this message"
   exit 1
}

while getopts "p:s:t:o:a:x:h:" opt
do
   case "$opt" in
      p ) echo "hahap" ;;
      s ) echo "hahas" ;;
      t ) echo "hahat" ;;
      o ) echo "hahao" ;;
      a ) echo "hahaa" ;;
      x ) echo "hahax" ;;
      h ) echo "hahah" ;;
      ? ) helpFunction ;; # Print helpFunction in case parameter is non-existent
   esac
done

shift $((OPTIND - 1))
if [ -z $1 ]
then
    echo "No file has been supplied!";
    helpFunction
fi

# set up the script here