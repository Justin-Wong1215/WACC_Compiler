#!/bin/sh

INVALID_SYNTAX_ERR=("./src/test/examples/invalid/syntaxErr/array"
                    "./src/test/examples/invalid/syntaxErr/basic"
                    "./src/test/examples/invalid/syntaxErr/expressions"
                    "./src/test/examples/invalid/syntaxErr/function"
                    "./src/test/examples/invalid/syntaxErr/if"
                    "./src/test/examples/invalid/syntaxErr/pairs"
                    "./src/test/examples/invalid/syntaxErr/print"
                    "./src/test/examples/invalid/syntaxErr/sequence"
                    "./src/test/examples/invalid/syntaxErr/variables"
                    "./src/test/examples/invalid/syntaxErr/while")

INVALID_PARSER_SYNTAX_ERR_LOG="./log/parse_invalid_syntax_error.log"
> $INVALID_PARSER_SYNTAX_ERR_LOG

# counters to represent the total number of test files to be processed
TOTAL_COUNT=$(find ${INVALID_SYNTAX_ERR[@]} -name "*.wacc" | wc -l)
COUNTER=0

for folder in ${INVALID_SYNTAX_ERR[@]}; do
  for file in $(find $folder -name "*.wacc")
  do
    ./compile $file 2>> $INVALID_PARSER_SYNTAX_ERR_LOG
    ret=$?
    echo "exit status: " $ret
    if [ $ret -ne 100 ]; then
      echo "status code incorrect: " $ret
      exit 1
    fi
    
    if ! grep "line [0-9]*:[0-9]*" $INVALID_PARSER_SYNTAX_ERR_LOG > /dev/null; then
      echo "expecting error but found none:"
      exit 1
    fi
    (( COUNTER += 1 ))
    echo "$COUNTER / $(($TOTAL_COUNT)) finished\n"
  done

  echo "========================================================================================"
  echo "Test Folder" $folder "has been processed" "($COUNTER / $(($TOTAL_COUNT)))"
  echo "========================================================================================"
done